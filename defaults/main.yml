---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Defaults file for openstack-ansible-ironic

# Verbosity Options
debug: False
verbose: True

# Name of the virtual env to deploy into
ironic_venv_tag: untagged
ironic_venv_bin: "/openstack/venvs/ironic-{{ ironic_venv_tag }}/bin"

# Set this to enable or disable installing in a venv
ironic_venv_enabled: True

# System info
ironic_system_user_name: ironic
ironic_system_group_name: ironic
ironic_system_shell: /bin/bash
ironic_system_comment: ironic system user
ironic_system_home_folder: "/var/lib/{{ ironic_system_user_name }}"
ironic_system_log_folder: "/var/log/{{ ironic_system_user_name }}"

# Ironic Program and Service names
ironic_api_program_name: ironic-api
ironic_conductor_program_name: ironic-conductor
python_ironic_client_program_name: ironic
ironic_service_names:
    - "{{ ironic_api_program_name }}"
    - "{{ ironic_conductor_program_name }}"

# Is this Ironic installation working standalone?
ironic_standalone: True

# Integrated Openstack configuration
ironic_openstack_driver_list: agent_ipmitool
ironic_openstack_auth_strategy: keystone
ironic_openstack_api_url: ''  # Not required when we have keystone
ironic_openstack_dhcp_provider: neutron
ironic_openstack_sync_power_state_interval: 60

# Standalone Ironic configuration
ironic_standalone_driver_list: pxe_amt # for testing with a NUC
ironic_standalone_auth_strategy: noauth
# TODO(mrda): We need to know what the public endpoint for ironic is
ironic_standalone_api_url: "api_url=http://{{ ansible_default_ipv4['address'] }}:6385/"
ironic_standalone_dhcp_provider: none
ironic_standalone_sync_power_state_interval: -1

# Common configuration
ironic_node_name: ironic

# Database
ironic_database_user: ironic
ironic_database_database: ironic
ironic_database_address: localhost
ironic_database_password: gu1d0

# TBD(mrda): need to handle this a little better :)
database_root_user: root
database_root_password: sp4m3ggs

# If you want to regenerate the ironic users SSH keys, on each run, set this
# var to True. Otherwise keys will be generated on the first run and not
# regenerated each run.
ironic_recreate_keys: False

ironic_bin: "{{ ironic_venv_bin }}"

ironic_service_name: ironic

ironic_common_apt_packages:
  - python-dev
  - python-pip
  - git

ironic_common_pip_packages:
  - virtualenvwrapper

ironic_conductor_apt_packages:
  - libmysqlclient-dev
  - libxml2-dev
  - rabbitmq-server
  - mysql-server
  - isc-dhcp-server
  - tftpd-hpa
  - syslinux
  - syslinux-common
  - libxslt1-dev
  - qemu-utils
  - libpq-dev
  - python-yaml
  - open-iscsi
  - ipmitool

ironic_conductor_pip_packages:
  - mysql-python

## ironic service
ironic_git_repo: https://git.openstack.org/openstack/ironic
ironic_git_install_branch: c6e8e2a33c65b6269a0b1b4f5e63620c68bdc3fb  # HEAD sha as of 13 Nov 2015
ironic_git_dest: "/opt/ironic_{{ ironic_git_install_branch | replace('/', '_') }}"

## python-ironicclient
python_ironicclient_git_repo: https://git.openstack.org/openstack/python-ironicclient
python_ironicclient_git_install_branch: b66f5e8dd60c023d6d216c3bbc5ec22d837623c3  # HEAD sha as of 13 Nov 2015
python_ironicclient_git_dest: "/opt/python-ironicclient_{{ python_ironicclient_git_install_branch | replace('/', '_') }}"

